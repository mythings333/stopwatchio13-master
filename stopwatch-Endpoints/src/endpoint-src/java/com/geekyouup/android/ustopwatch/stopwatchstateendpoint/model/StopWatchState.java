/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-06-05 16:09:48 UTC)
 * on 2013-06-12 at 20:19:17 UTC 
 * Modify at your own risk.
 */

package com.geekyouup.android.ustopwatch.stopwatchstateendpoint.model;

/**
 * Model definition for StopWatchState.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the . For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class StopWatchState extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long key;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean running;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long serverTimestamp;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sourceDevice;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double timestamp;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getKey() {
    return key;
  }

  /**
   * @param key key or {@code null} for none
   */
  public StopWatchState setKey(java.lang.Long key) {
    this.key = key;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getRunning() {
    return running;
  }

  /**
   * @param running running or {@code null} for none
   */
  public StopWatchState setRunning(java.lang.Boolean running) {
    this.running = running;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getServerTimestamp() {
    return serverTimestamp;
  }

  /**
   * @param serverTimestamp serverTimestamp or {@code null} for none
   */
  public StopWatchState setServerTimestamp(java.lang.Long serverTimestamp) {
    this.serverTimestamp = serverTimestamp;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSourceDevice() {
    return sourceDevice;
  }

  /**
   * @param sourceDevice sourceDevice or {@code null} for none
   */
  public StopWatchState setSourceDevice(java.lang.String sourceDevice) {
    this.sourceDevice = sourceDevice;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getTimestamp() {
    return timestamp;
  }

  /**
   * @param timestamp timestamp or {@code null} for none
   */
  public StopWatchState setTimestamp(java.lang.Double timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  @Override
  public StopWatchState set(String fieldName, Object value) {
    return (StopWatchState) super.set(fieldName, value);
  }

  @Override
  public StopWatchState clone() {
    return (StopWatchState) super.clone();
  }

}
